# -*- coding: utf-8 -*-
"""LP_DESAFIO_OO_Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/clovesrocha/ETEPDPI2/blob/main/LP_DESAFIO_OO_Python.ipynb
"""

#ETE PD
#LP
#PROF. CLOVES
#ORIENTAÇÃO A OBJETOS COM PYTHON

#Declarando classes
class Pessoa():
		# Atributos e métodos da classe
class PessoaFisica():
    # Atributos e métodos da classe

#Criando construtor da classe
class Pessoa:
    def __init__(self, nome, sexo, cpf):
        self.nome = nome
        self.sexo = sexo
        self.cpf = cpf

#Para declarar um atributo em uma classe no Python é bem simples, 
#basta definir o nome do atributo no método especial chamado __init__, 
#este método define o construtor da classe, ou seja, 
#é onde definimos como uma nova pessoa será criada em nosso programa.

#Instanciando objetos parte 1/2
class Pessoa:
    def __init__(self, nome, sexo, cpf):
        self.nome = nome
        self.sexo = sexo
        self.cpf = cpf

if __name__ == "__main__":
    pessoa1 = Pessoa("Cloves", "M", "0123456789")
    print(pessoa1.nome)

#Declarando métodos
class Pessoa:
    def __init__(self, nome, sexo, cpf, ativo):
        self.nome = nome
        self.sexo = sexo
        self.cpf = cpf
        self.ativo = ativo
        
    def desativar(self):
        self.ativo = False
        print("A pessoa foi desativada com sucesso")

if __name__ == "__main__":
    pessoa1 = Pessoa("João", "M", "123456", True)
    pessoa1.desativar()

#Declarando propriedades
class Pessoa:
    def __init__(self, nome, sexo, cpf, ativo):
        self.nome = nome
        self.sexo = sexo
        self.cpf = cpf
        self.__ativo = ativo
        
    def desativar(self):
        self.__ativo = False
        print("A pessoa foi desativada com sucesso")

if __name__ == "__main__":
    pessoa1 = Pessoa("João", "M", "123456", True)
    pessoa1.desativar()
    pessoa1.ativo = True
    print(pessoa1.ativo)

#Instanciando objetos parte 2/2
class Pessoa:
    def __init__(self, nome, sexo, cpf, ativo):
        self.__nome = nome
        self.__sexo = sexo
        self.__cpf = cpf
        self.__ativo = ativo
        
    def desativar(self):
        self.__ativo = False
        print("A pessoa foi desativada com sucesso")
        
    def get_nome(self):
        return self.__nome
    
    def set_nome(self, nome):
        self.__nome = nome

if __name__ == "__main__":
    pessoa1 = Pessoa("João", "M", "123456", True)
    pessoa1.desativar()
    pessoa1.ativo = True
    print(pessoa1.ativo)
    
    # Utilizando geters e setters
    pessoa1.set_nome("José")
    print(pessoa1.get_nome())

class Pessoa:
    def __init__(self, nome, sexo, cpf, ativo):
        self.__nome = nome
        self.__sexo = sexo
        self.__cpf = cpf
        self.__ativo = ativo
        
    def desativar(self):
        self.__ativo = False
        print("A pessoa foi desativada com sucesso")
        
        def get_nome(self):
        return self.__nome
    
    def set_nome(self, nome):
        self.__nome = nome

    @property
    def nome(self):
        return self.__nome
    
    @nome.setter
    def nome(self, nome):
        self.__nome = nome

if __name__ == "__main__":
    pessoa1 = Pessoa("Cloves", "123456", True)
    pessoa1.desativar()
    pessoa1.ativo = True
    print(pessoa1.ativo)
    
        # Utilizando geters e setters
    pessoa1.set_nome("José")
    print(pessoa1.get_nome())

    # Utilizando properties
    pessoa1.nome = "José"
    print(pessoa1.nome)



#Criando construtor da classe
class Pessoa:
    def __init__(self, nome, sexo, cpf):
        self.nome = nome
        self.sexo = sexo
        self.cpf = cpf

#Para declarar um atributo em uma classe no Python é bem simples, 
#basta definir o nome do atributo no método especial chamado __init__, 
#este método define o construtor da classe, ou seja, 
#é onde definimos como uma nova pessoa será criada em nosso programa.

#Instanciando objetos parte 1/2
class Pessoa:
    def __init__(self, nome, sexo, cpf):
        self.nome = nome
        self.sexo = sexo
        self.cpf = cpf

if __name__ == "__main__":
    pessoa1 = Pessoa("Cloves", "M", "0123456789")
    print(pessoa1.nome)